1. What is a Database? Explain with an example on why should we need a database?
Ans: A database is essentially a structured collection of data organized in a way that allows easy access, retrieval, and manipulation.
To Explain the importance of a database imagine you own a library. You have thousands of books, each with its own title, author, genre, publication date, etc. 
Keeping track of all this information on loose notes or spreadsheets would be a nightmare. 
A database, however, can organize all the book information in a structured way, making it easy to: Find specific books, keep track of inventory, recommend books, generate reports.

2. Write a short note on File base storage system. Explain the major challenges of a File-based storage system.
Ans: File-based storage systems are the traditional ways of data storage. They organize data into individual files stored on a hierarchical file system, 
similar to how documents are organized in folders on your computer.

As data volumes grow and storage needs become more complex, file-based systems face some significant challenges:

I. Scalability: Adding storage capacity often requires adding more physical disks or servers, which can be expensive and complex to manage.

II. Performance: Accessing data can become slow, especially for large files or when dealing with many small files.

III. Data protection: File-based systems often lack built-in redundancy and disaster recovery features, making data vulnerable to loss or corruption.

IV. Security: Access control and permissions can be complex to manage, especially in multi-user environments.

3. What is DBMS? What was the need for DBMS?
Ans: A Database Management System (DBMS) is a software application that acts as an interface between a user and a database. 
It allows users to create, access, manage, and manipulate data stored in a database.
We can think of it as the control center for the data, keeping everything organized and accessible.

Need for DBMS:
I. Reduced data redundancy
II. Improved data integrity
III. Efficient data access
IV. Enhanced data security
V. Simplified data sharing

4. Explain 5 challenges of file-based storage system which was tackled by DBMS.
Ans: 5 challenges of file-based storage systems that were tackled by DBMS:

I. Data Redundancy: 
In file-based systems, the same data can be stored in multiple files, leading to wasted storage space and inconsistencies. 
For example, a customer's name and address might be stored in both a customer file and an order file. If the customer's address changes, 
it would need to be updated in both files to avoid inconsistencies. While DBMS eliminates redundancy by storing data in a central location with organized tables and relationships. 
This ensures that data is only stored once, reducing storage requirements and improving data consistency.

II. Data Inconsistency: 
With file-based systems, data can become inconsistent if it is updated in different files at different times. This can lead to errors and unreliable data.
DBMS enforces data integrity rules and constraints to ensure that data is always accurate and consistent. 
This includes features like data validation, referential integrity, and ACID transactions.

III. Difficult Data Access:
Finding specific data in file-based systems can be time-consuming and inefficient, especially for large datasets. Users need to know the exact location and 
format of the data they are looking for. DBMS provides powerful query languages like SQL (Structured Query Language) that allow users to search and retrieve data quickly
and easily. Users can specify the criteria they are looking for, and the DBMS will locate and retrieve the relevant data.

IV. Limited Data Sharing:

Sharing data between different applications or users can be difficult with file-based systems. Each application or user needs to have access to the specific files 
they need, which can create security and management challenges. DBMS facilitates data sharing by providing a central repository of data that can be accessed by 
authorized users and applications. This makes it easier to share data and collaborate on projects.

V. Lack of Data Security:

File-based systems often lack built-in security features, making data vulnerable to unauthorized access and modification. 
This can be a major concern for organizations that handle sensitive data. DBMS offers robust security features like user access control, encryption, and auditing to 
protect data from unauthorized access and ensure its confidentiality, integrity, and availability.

5. List out the different types of classification in DBMS and explain them in depth.
Ans: Here are some key classifications and their explanations:

I. Based on Data Model:

a. Relational DBMS (RDBMS): The most common type, organizes data in tables with rows and columns. Relationships between tables are established through foreign keys. 
Widely used for general-purpose applications. (e.g., MySQL, Oracle, PostgreSQL)
b. Object-Oriented DBMS (OODBMS): Extends relational model with object-oriented concepts like classes, inheritance, and encapsulation. 
Offers better representation of complex data structures. (e.g., GemStone, Versant)
c. NoSQL DBMS: Non-relational databases that offer flexibility for unstructured or semi-structured data. Examples include:
Document stores: MongoDB, CouchDB
Key-value stores: Redis, Amazon DynamoDB
Wide-column stores: Cassandra, HBase
Graph databases: Neo4j, OrientDB

II. Based on Number of Users:

a. Single-user DBMS: Designed for individual use, typically for development or testing purposes.
b. Multi-user DBMS: Supports concurrent access and data modification by multiple users. Essential for most real-world applications.

III. Based on Database Distribution:

a. Centralized DBMS: All data is stored on a single server, making it easy to manage but with limitations in scalability and performance.
b. Distributed DBMS: Data is spread across multiple servers connected through a network, offering better scalability and availability but increasing complexity.

6. What is the significance of Data Modelling and explain the types of data modeling.
Ans: Data modeling is the crucial first step in building any successful database system. It's like the blueprint for a house â€“ it defines the structure, organization, 
and relationships between different data elements, ensuring efficient data storage, retrieval, and analysis.

Types of Data Modeling:
I. Entity-Relationship (ER) Modeling: This is a fundamental technique that identifies entities (objects) and their relationships with each other. 
It's often visualized using diagrams like Entity-Relationship Diagrams (ERDs).

II. Relational Modeling: This builds on ER modeling by defining data structures in tables with rows and columns. 
It forms the basis for relational databases like MySQL or Oracle.

III. Dimensional Modeling: This technique is specifically designed for data warehousing and business intelligence. 
It focuses on organizing data into fact tables and dimension tables for efficient data analysis and reporting.

IV. Object-Oriented Modeling: This approach leverages concepts from object-oriented programming, like classes, inheritance, and encapsulation, to model 
complex data structures and relationships.

7. Explain 3 schema architecture along with its advantages.
Ans: The three-schema architecture is a fundamental concept in database management systems (DBMS). It defines three distinct levels of data representation:

I. Internal Schema:

This is the lowest level, closest to the physical storage layer.
It describes how data is physically stored on disk, including file structures, data access methods, and storage allocation mechanisms.
It is hidden from users and application programs, accessed only by the DBMS itself.

II. Conceptual Schema:

This is the middle level, representing the overall logical structure of the data.
It describes entities (objects), attributes (properties of entities), and relationships between entities.
It is independent of the physical implementation and focuses on the data's meaning and organization.
Users and application programs interact with the database through the conceptual schema using a data manipulation language (DML) like SQL.

III. External Schema:

This is the highest level, closest to the users and applications.
It defines a set of views (subsets) of the conceptual schema that are accessed by specific users or applications.
Each view presents a different perspective of the data tailored to the needs of the user or application.
